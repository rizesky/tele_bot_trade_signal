# =============================================================================
# TRADING SIGNAL BOT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values

# =============================================================================
# BINANCE API CONFIGURATION (REQUIRED)
# =============================================================================
# Get these from https://www.binance.com/en/my/settings/api-management
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here

# Binance environment: dev (testnet) or prod (mainnet)
BINANCE_ENV=dev

# Binance WebSocket URL (optional, uses default if not set)
BINANCE_WS_URL=wss://fstream.binance.com/ws/

# =============================================================================
# TELEGRAM CONFIGURATION (REQUIRED)
# =============================================================================
# Create a bot at https://t.me/BotFather to get the token
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Get your chat ID by messaging @userinfobot on Telegram
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# Telegram API URLs (required)
TELEGRAM_SEND_MESSAGE_URL=https://api.telegram.org/bot{token}/sendMessage
TELEGRAM_SEND_PHOTO_URL=https://api.telegram.org/bot{token}/sendPhoto

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================
# Trading symbols (OPTIONAL - leave empty to auto-fetch from Binance)
# If empty, bot will automatically fetch all available futures symbols
# If specified, use comma-separated list: BTCUSDT,ETHUSDT,BNBUSDT
SYMBOLS=

# Timeframes to monitor (REQUIRED)
# Supported: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M
TIMEFRAMES=15m,30m,1h,4h

# Historical data settings
HISTORY_CANDLES=200

# Signal cooldown in seconds (prevents spam)
SIGNAL_COOLDOWN=600

# =============================================================================
# RISK MANAGEMENT
# =============================================================================
# Stop loss percentage (0.02 = 2%)
DEFAULT_SL_PERCENT=0.02

# Take profit levels (comma-separated percentages)
DEFAULT_TP_PERCENTS=0.015,0.03,0.05,0.08

# Maximum leverage to use
MAX_LEVERAGE=20

# Market cap filtering (1 = enabled, 0 = disabled)
FILTER_BY_MARKET_CAP=0

# =============================================================================
# PERFORMANCE & CONCURRENCY
# =============================================================================
# Lazy loading for historical data (1 = enabled, 0 = disabled)
# Recommended: 1 (enabled) for better performance with many symbols
LAZY_LOADING_ENABLED=1

# Maximum symbols to lazy load historical data for
MAX_LAZY_LOAD_SYMBOLS=100

# Maximum concurrent API requests for historical data loading
# Higher values = faster loading but more API usage
MAX_CONCURRENT_LOADS=15

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Enable SQLite database for persistence (1 = enabled, 0 = disabled)
# Stores historical data, signals, and bot state across restarts
DB_ENABLE_PERSISTENCE=1

# SQLite database file path
DB_PATH=trading_bot.db

# Database connection pool size (for concurrent access)
DB_POOL_SIZE=10

# Days to keep historical data in database (older data will be cleaned up)
DB_CLEANUP_DAYS=30

# =============================================================================
# OPERATION MODES
# =============================================================================
# Simulation mode (1 = enabled, 0 = disabled)
# When enabled: reduces API calls, uses test data
SIMULATION_MODE=0

# Data testing mode (1 = enabled, 0 = disabled)
# When enabled: generates test signals for development
DATA_TESTING=0

# =============================================================================
# OPTIONAL: COINGECKO API (for market cap filtering)
# =============================================================================
# Get free API key from https://www.coingecko.com/en/api
# COINGECKO_API_KEY=your_coingecko_api_key_here
